import streamlit as st
import reveal_slides as rs

def presentation_page():
    st.title("Презентация проекта")

    # Пример содержимого с Markdown-разделителями (---)
    presentation_markdown = """
    # Прогнозирование отказов оборудования
    ---
    ## Введение 
    **Цель проекта:** Разработать интеллектуальную систему для предиктивного обслуживания оборудования с расширенной функциональностью.
    ---
    ## Введение 
    **Задачи:**
    - Определение типа отказа (мультиклассовая классификация)
    - Оптимизация модели с использованием Optuna
    - Интеграция MLOps через ClearML для отслеживания экспериментов
    ---
    ## Датасет 
    - **Название:** AI4I 2020 Predictive Maintenance Dataset  
    - **Характеристики:** 10 000 записей, 14 признаков  
    ---
    ## Датасет
    - **Описание:** Данные о температуре, скорости вращения, крутящем моменте и износе инструмента
    ---
    ## Предобработка 
    - Удаление ненужных столбцов (UDI, Product ID)
    - Преобразование категориальных признаков (Type)
    ---
    ## Предобработка
    - Создание новой целевой переменной для мультиклассовой классификации отказов:
      - 0: Нет отказа  
      - 1: TWF  
      - 2: HDF  
      - 3: PWF  
      - 4: OSF  
      - 5: RNF  
    - Масштабирование числовых признаков
    ---
    ## Обучение и оптимизация 
    - **Модель:** RandomForestClassifier  
    - **Оптимизация:** Optuna с 5-кратной стратифицированной кросс-валидацией
    ---
    ## Обучение и оптимизация
    - Лучшие гиперпараметры: {n_estimators, max_depth, min_samples_split}  
    - Лучшее значение CV accuracy: ~0.98
    ---
    ## Интеграция MLOps
    - **ClearML:** Отслеживание экспериментов и логирование параметров
    ---
    ## Интеграция MLOps
    - Управление версиями моделей и данных
    ---
    ## Результаты финальной модели
    - **Test Accuracy:** ~0.984  
    - Анализ через Confusion Matrix и Classification Report
    ---
    ## Заключение
    - Модель успешно классифицирует типы отказов оборудования  
    - Оптимизация гиперпараметров улучшила качество модели  
    - Интеграция ClearML обеспечивает прозрачное отслеживание экспериментов
    ---
    ## Благодарности
    Спасибо за внимание!
    """

    # Параметры презентации через сайдбар
    with st.sidebar:
        st.header("Настройки презентации")
        theme = st.selectbox("Тема", ["black", "white", "league", "beige", "sky", "night", "serif", "simple", "solarized"])
        transition = st.selectbox("Переход слайдов", ["slide", "convex", "concave", "zoom", "none"])

    rs.slides(
        presentation_markdown,
        height=600,
        theme=theme,
        config={"transition": transition},
        markdown_props={"data-separator-vertical": "^--$"}
    )
